{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukas\\\\Desktop\\\\fullstackOpen\\\\SubmissionRepo\\\\FullStackOpen\\\\part1\\\\Ex 1.6-1.14\\\\src\\\\index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGood = () => {\n    setGood(good + 1);\n  };\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const handleBad = () => {\n    setBad(bad + 1);\n  };\n\n  const Statistics = props => {\n    const sum = good + neutral + bad;\n    const average = (good - bad) / sum;\n    const positive = good / sum;\n\n    if (sum != 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, \"Statistics\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, \"No feddback given\"));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"Statistics\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"good \", good), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, \"neutral \", neutral), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"bad \", bad), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"all \", sum), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"average \", average), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"positive \", positive, \"%\"));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"give feedback\"), /*#__PURE__*/React.createElement(\"button\", {\n    text: \"good\",\n    onClick: handleGood,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"good\"), /*#__PURE__*/React.createElement(\"button\", {\n    text: \"neutral\",\n    onClick: handleNeutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"neutral\"), /*#__PURE__*/React.createElement(\"button\", {\n    text: \"bad\",\n    onClick: handleBad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"bad\"), /*#__PURE__*/React.createElement(Statistics, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/lukas/Desktop/fullstackOpen/SubmissionRepo/FullStackOpen/part1/Ex 1.6-1.14/src/index.js"],"names":["React","useState","ReactDOM","App","good","setGood","neutral","setNeutral","bad","setBad","handleGood","handleNeutral","handleBad","Statistics","props","sum","average","positive","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,CAAD,CAA9B;;AAEA,QAAMS,UAAU,GAAG,MAAM;AACvBL,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,GAFD;;AAGA,QAAMO,aAAa,GAAG,MAAM;AAC1BJ,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,GAFD;;AAGA,QAAMM,SAAS,GAAG,MAAM;AACtBH,IAAAA,MAAM,CAACD,GAAG,GAAG,CAAP,CAAN;AACD,GAFD;;AAIA,QAAMK,UAAU,GAAIC,KAAD,IAAW;AAC5B,UAAMC,GAAG,GAAGX,IAAI,GAAGE,OAAP,GAAiBE,GAA7B;AACA,UAAMQ,OAAO,GAAG,CAACZ,IAAI,GAAGI,GAAR,IAAeO,GAA/B;AACA,UAAME,QAAQ,GAAGb,IAAI,GAAGW,GAAxB;;AACA,QAAIA,GAAG,IAAI,CAAX,EAAc;AACZ,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CADF;AAMD;;AACD,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAASX,IAAT,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYE,OAAZ,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAQE,GAAR,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAQO,GAAR,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYC,OAAZ,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaC,QAAb,MAPF,CADF;AAWD,GAvBD;;AAwBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,OAAO,EAAEP,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEC,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,eAQE;AAAQ,IAAA,IAAI,EAAC,KAAb;AAAmB,IAAA,OAAO,EAAEC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARF,eAYE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAgBD,CAxDD;;AA0DAV,QAAQ,CAACgB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGood = () => {\n    setGood(good + 1);\n  };\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n  const handleBad = () => {\n    setBad(bad + 1);\n  };\n\n  const Statistics = (props) => {\n    const sum = good + neutral + bad;\n    const average = (good - bad) / sum;\n    const positive = good / sum;\n    if (sum != 0) {\n      return (\n        <div>\n          <h1>Statistics</h1>\n          <p>No feddback given</p>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <h1>Statistics</h1>\n        <p>good {good}</p>\n        <p>neutral {neutral}</p>\n        <p>bad {bad}</p>\n        <p>all {sum}</p>\n        <p>average {average}</p>\n        <p>positive {positive}%</p>\n      </div>\n    );\n  };\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <button text=\"good\" onClick={handleGood}>\n        good\n      </button>\n      <button text=\"neutral\" onClick={handleNeutral}>\n        neutral\n      </button>\n      <button text=\"bad\" onClick={handleBad}>\n        bad\n      </button>\n\n      <Statistics />\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}