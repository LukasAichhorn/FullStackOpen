{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukas\\\\Desktop\\\\fullstackOpen\\\\SubmissionRepo\\\\FullStackOpen\\\\part1\\\\Ex 1.6-1.14\\\\src\\\\index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const Button = props => {\n    const handleGood = () => {\n      setGood(good + 1);\n    };\n\n    const handleNeutral = () => {\n      setNeutral(neutral + 1);\n    };\n\n    const handleBad = () => {\n      setBad(bad + 1);\n    };\n\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: props.handler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    }, \"props.text\");\n  };\n\n  const Statistics = props => {\n    const sum = good + neutral + bad;\n    const average = (good - bad) / sum;\n    const positive = good / sum;\n\n    if (sum == 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }, \"Statistics\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, \"No feedback given\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, \"Statistics\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, \"good \", good), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, \"neutral \", neutral), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, \"bad \", bad), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, \"all \", sum), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, \"average \", average), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, \"positive \", positive, \"%\"));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"give feedback\"), /*#__PURE__*/React.createElement(Button, {\n    text: \"good\",\n    handler: \"handleGood\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    text: \"neutral\",\n    onClick: \"handleNeutral\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    text: \"bad\",\n    onClick: \"handleBad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/lukas/Desktop/fullstackOpen/SubmissionRepo/FullStackOpen/part1/Ex 1.6-1.14/src/index.js"],"names":["React","useState","ReactDOM","App","good","setGood","neutral","setNeutral","bad","setBad","Button","props","handleGood","handleNeutral","handleBad","handler","Statistics","sum","average","positive","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,CAAD,CAA9B;;AAEA,QAAMS,MAAM,GAAIC,KAAD,IAAW;AACxB,UAAMC,UAAU,GAAG,MAAM;AACvBP,MAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,KAFD;;AAGA,UAAMS,aAAa,GAAG,MAAM;AAC1BN,MAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,KAFD;;AAGA,UAAMQ,SAAS,GAAG,MAAM;AACtBL,MAAAA,MAAM,CAACD,GAAG,GAAG,CAAP,CAAN;AACD,KAFD;;AAIA,wBAAO;AAAQ,MAAA,OAAO,EAAEG,KAAK,CAACI,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,GAZD;;AAcA,QAAMC,UAAU,GAAIL,KAAD,IAAW;AAC5B,UAAMM,GAAG,GAAGb,IAAI,GAAGE,OAAP,GAAiBE,GAA7B;AACA,UAAMU,OAAO,GAAG,CAACd,IAAI,GAAGI,GAAR,IAAeS,GAA/B;AACA,UAAME,QAAQ,GAAGf,IAAI,GAAGa,GAAxB;;AACA,QAAIA,GAAG,IAAI,CAAX,EAAc;AACZ,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CADF;AAMD,KAPD,MAOO;AACL,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAASb,IAAT,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAYE,OAAZ,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAQE,GAAR,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAQS,GAAR,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAYC,OAAZ,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAaC,QAAb,MAPF,CADF;AAWD;AACF,GAxBD;;AAyBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,OAAO,EAAC,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAIE;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAME;AAAQ,IAAA,IAAI,EAAC,KAAb;AAAmB,IAAA,OAAO,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAQE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAYD,CAzDD;;AA2DAjB,QAAQ,CAACkB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const Button = (props) => {\n    const handleGood = () => {\n      setGood(good + 1);\n    };\n    const handleNeutral = () => {\n      setNeutral(neutral + 1);\n    };\n    const handleBad = () => {\n      setBad(bad + 1);\n    };\n\n    return <button onClick={props.handler}>props.text</button>;\n  };\n\n  const Statistics = (props) => {\n    const sum = good + neutral + bad;\n    const average = (good - bad) / sum;\n    const positive = good / sum;\n    if (sum == 0) {\n      return (\n        <div>\n          <h1>Statistics</h1>\n          <p>No feedback given</p>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <h1>Statistics</h1>\n          <p>good {good}</p>\n          <p>neutral {neutral}</p>\n          <p>bad {bad}</p>\n          <p>all {sum}</p>\n          <p>average {average}</p>\n          <p>positive {positive}%</p>\n        </div>\n      );\n    }\n  };\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button text=\"good\" handler=\"handleGood\" />\n\n      <button text=\"neutral\" onClick=\"handleNeutral\" />\n\n      <button text=\"bad\" onClick=\"handleBad\" />\n\n      <Statistics />\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}