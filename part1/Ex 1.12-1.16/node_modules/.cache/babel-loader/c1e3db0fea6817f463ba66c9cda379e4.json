{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukas\\\\Desktop\\\\fullstackOpen\\\\SubmissionRepo\\\\FullStackOpen\\\\part1\\\\Ex 1.6-1.14\\\\src\\\\index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const sum = good + neutral + bad;\n  const average = (good - bad) / sum;\n  const positive = good / sum;\n\n  const handleGood = () => {\n    setGood(good + 1);\n  };\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const handleBad = () => {\n    setBad(bad + 1);\n  };\n\n  const Button = props => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: props.clickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    }, props.text);\n  };\n\n  const Statistics = props => {\n    if (sum == 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, \"Statistics\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }, \"No feedback given\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, props.text, \": \", props.value, \" \", props.metric));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"give feedback\"), /*#__PURE__*/React.createElement(Button, {\n    text: \"good\",\n    clickHandler: handleGood,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"neutral\",\n    clickHandler: handleNeutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"bad\",\n    clickHander: handleBad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Statistics\"), /*#__PURE__*/React.createElement(Statistics, {\n    text: \"good\",\n    value: good,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    text: \"neutral\",\n    value: neutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    text: \"bad\",\n    value: bad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    text: \"all\",\n    value: sum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    text: \"average:\",\n    value: average,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    text: \"positive:\",\n    value: positive,\n    metric: \"%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/lukas/Desktop/fullstackOpen/SubmissionRepo/FullStackOpen/part1/Ex 1.6-1.14/src/index.js"],"names":["React","useState","ReactDOM","App","good","setGood","neutral","setNeutral","bad","setBad","sum","average","positive","handleGood","handleNeutral","handleBad","Button","props","clickHandler","text","Statistics","value","metric","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const sum = good + neutral + bad;\n  const average = (good - bad) / sum;\n  const positive = good / sum;\n\n  const handleGood = () => {\n    setGood(good + 1);\n  };\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n  const handleBad = () => {\n    setBad(bad + 1);\n  };\n\n  const Button = (props) => {\n    return <button onClick={props.clickHandler}>{props.text}</button>;\n  };\n\n  const Statistics = (props) => {\n    if (sum == 0) {\n      return (\n        <div>\n          <h1>Statistics</h1>\n          <p>No feedback given</p>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <p>\n            {props.text}: {props.value} {props.metric}\n          </p>\n        </div>\n      );\n    }\n  };\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button text=\"good\" clickHandler={handleGood} />\n\n      <Button text=\"neutral\" clickHandler={handleNeutral} />\n\n      <Button text=\"bad\" clickHander={handleBad} />\n      <h1>Statistics</h1>\n      <Statistics text=\"good\" value={good} />\n      <Statistics text=\"neutral\" value={neutral} />\n      <Statistics text=\"bad\" value={bad} />\n      <Statistics text=\"all\" value={sum} />\n      <Statistics text=\"average:\" value={average} />\n      <Statistics text=\"positive:\" value={positive} metric=\"%\" />\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}